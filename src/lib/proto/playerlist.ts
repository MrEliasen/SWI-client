// @generated by protobuf-ts 2.9.1 with parameter long_type_string
// @generated from protobuf file "playerlist.proto" (package "responses", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Any } from "./google/protobuf/any";
/**
 * @generated from protobuf message responses.PlayerList
 */
export interface PlayerList {
    /**
     * @generated from protobuf field: google.protobuf.Any any_field = 1;
     */
    anyField?: Any;
    /**
     * @generated from protobuf field: responses.PlayerEvent type = 2;
     */
    type: PlayerEvent;
    /**
     * @generated from protobuf field: string id = 3;
     */
    id: string;
    /**
     * @generated from protobuf field: string name = 4;
     */
    name: string;
    /**
     * @generated from protobuf field: string hometown = 5;
     */
    hometown: string;
    /**
     * @generated from protobuf field: string gang_tag = 6;
     */
    gangTag: string;
}
/**
 * @generated from protobuf enum responses.PlayerEvent
 */
export enum PlayerEvent {
    /**
     * @generated from protobuf enum value: EVENT_TYPE_PLAYER_LEAVE = 0;
     */
    EVENT_TYPE_PLAYER_LEAVE = 0,
    /**
     * @generated from protobuf enum value: EVENT_TYPE_PLAYER_JOIN = 1;
     */
    EVENT_TYPE_PLAYER_JOIN = 1
}
// @generated message type with reflection information, may provide speed optimized methods
class PlayerList$Type extends MessageType<PlayerList> {
    constructor() {
        super("responses.PlayerList", [
            { no: 1, name: "any_field", kind: "message", T: () => Any },
            { no: 2, name: "type", kind: "enum", T: () => ["responses.PlayerEvent", PlayerEvent] },
            { no: 3, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "hometown", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "gang_tag", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<PlayerList>): PlayerList {
        const message = { type: 0, id: "", name: "", hometown: "", gangTag: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PlayerList>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PlayerList): PlayerList {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.protobuf.Any any_field */ 1:
                    message.anyField = Any.internalBinaryRead(reader, reader.uint32(), options, message.anyField);
                    break;
                case /* responses.PlayerEvent type */ 2:
                    message.type = reader.int32();
                    break;
                case /* string id */ 3:
                    message.id = reader.string();
                    break;
                case /* string name */ 4:
                    message.name = reader.string();
                    break;
                case /* string hometown */ 5:
                    message.hometown = reader.string();
                    break;
                case /* string gang_tag */ 6:
                    message.gangTag = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PlayerList, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.protobuf.Any any_field = 1; */
        if (message.anyField)
            Any.internalBinaryWrite(message.anyField, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* responses.PlayerEvent type = 2; */
        if (message.type !== 0)
            writer.tag(2, WireType.Varint).int32(message.type);
        /* string id = 3; */
        if (message.id !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.id);
        /* string name = 4; */
        if (message.name !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.name);
        /* string hometown = 5; */
        if (message.hometown !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.hometown);
        /* string gang_tag = 6; */
        if (message.gangTag !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.gangTag);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message responses.PlayerList
 */
export const PlayerList = new PlayerList$Type();
