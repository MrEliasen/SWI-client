// @generated by protobuf-ts 2.9.1 with parameter long_type_string
// @generated from protobuf file "generic.proto" (package "responses", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { ResponseStatus } from "./common";
import { Any } from "./google/protobuf/any";
/**
 * @generated from protobuf message responses.Generic
 */
export interface Generic {
    /**
     * @generated from protobuf field: google.protobuf.Any any_field = 1;
     */
    anyField?: Any;
    /**
     * @generated from protobuf field: responses.ResponseStatus status = 2;
     */
    status: ResponseStatus;
    /**
     * @generated from protobuf field: uint32 alignment = 3;
     */
    alignment: number;
    /**
     * @generated from protobuf field: repeated string messages = 4;
     */
    messages: string[];
    /**
     * @generated from protobuf field: string command = 5;
     */
    command: string;
    /**
     * @generated from protobuf field: bool ascii = 6;
     */
    ascii: boolean;
}
// @generated message type with reflection information, may provide speed optimized methods
class Generic$Type extends MessageType<Generic> {
    constructor() {
        super("responses.Generic", [
            { no: 1, name: "any_field", kind: "message", T: () => Any },
            { no: 2, name: "status", kind: "enum", T: () => ["responses.ResponseStatus", ResponseStatus, "RESPONSE_STATUS_"] },
            { no: 3, name: "alignment", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "messages", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "command", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "ascii", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<Generic>): Generic {
        const message = { status: 0, alignment: 0, messages: [], command: "", ascii: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Generic>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Generic): Generic {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.protobuf.Any any_field */ 1:
                    message.anyField = Any.internalBinaryRead(reader, reader.uint32(), options, message.anyField);
                    break;
                case /* responses.ResponseStatus status */ 2:
                    message.status = reader.int32();
                    break;
                case /* uint32 alignment */ 3:
                    message.alignment = reader.uint32();
                    break;
                case /* repeated string messages */ 4:
                    message.messages.push(reader.string());
                    break;
                case /* string command */ 5:
                    message.command = reader.string();
                    break;
                case /* bool ascii */ 6:
                    message.ascii = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Generic, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.protobuf.Any any_field = 1; */
        if (message.anyField)
            Any.internalBinaryWrite(message.anyField, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* responses.ResponseStatus status = 2; */
        if (message.status !== 0)
            writer.tag(2, WireType.Varint).int32(message.status);
        /* uint32 alignment = 3; */
        if (message.alignment !== 0)
            writer.tag(3, WireType.Varint).uint32(message.alignment);
        /* repeated string messages = 4; */
        for (let i = 0; i < message.messages.length; i++)
            writer.tag(4, WireType.LengthDelimited).string(message.messages[i]);
        /* string command = 5; */
        if (message.command !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.command);
        /* bool ascii = 6; */
        if (message.ascii !== false)
            writer.tag(6, WireType.Varint).bool(message.ascii);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message responses.Generic
 */
export const Generic = new Generic$Type();
