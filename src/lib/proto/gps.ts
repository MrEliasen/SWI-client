// @generated by protobuf-ts 2.9.1 with parameter long_type_string
// @generated from protobuf file "gps.proto" (package "responses", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Coordinate } from "./common";
import { Any } from "./google/protobuf/any";
/**
 * @generated from protobuf message responses.GPS
 */
export interface GPS {
    /**
     * @generated from protobuf field: google.protobuf.Any any_field = 1;
     */
    anyField?: Any;
    /**
     * @generated from protobuf field: bool enabled = 2;
     */
    enabled: boolean;
    /**
     * @generated from protobuf field: responses.Coordinate location = 3;
     */
    location?: Coordinate;
    /**
     * @generated from protobuf field: repeated responses.Coordinate pois = 4;
     */
    pois: Coordinate[];
    /**
     * @generated from protobuf field: int32 width = 5;
     */
    width: number;
    /**
     * @generated from protobuf field: int32 height = 6;
     */
    height: number;
    /**
     * @generated from protobuf field: string name = 7;
     */
    name: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class GPS$Type extends MessageType<GPS> {
    constructor() {
        super("responses.GPS", [
            { no: 1, name: "any_field", kind: "message", T: () => Any },
            { no: 2, name: "enabled", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "location", kind: "message", T: () => Coordinate },
            { no: 4, name: "pois", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Coordinate },
            { no: 5, name: "width", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "height", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<GPS>): GPS {
        const message = { enabled: false, pois: [], width: 0, height: 0, name: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GPS>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GPS): GPS {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.protobuf.Any any_field */ 1:
                    message.anyField = Any.internalBinaryRead(reader, reader.uint32(), options, message.anyField);
                    break;
                case /* bool enabled */ 2:
                    message.enabled = reader.bool();
                    break;
                case /* responses.Coordinate location */ 3:
                    message.location = Coordinate.internalBinaryRead(reader, reader.uint32(), options, message.location);
                    break;
                case /* repeated responses.Coordinate pois */ 4:
                    message.pois.push(Coordinate.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* int32 width */ 5:
                    message.width = reader.int32();
                    break;
                case /* int32 height */ 6:
                    message.height = reader.int32();
                    break;
                case /* string name */ 7:
                    message.name = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GPS, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.protobuf.Any any_field = 1; */
        if (message.anyField)
            Any.internalBinaryWrite(message.anyField, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* bool enabled = 2; */
        if (message.enabled !== false)
            writer.tag(2, WireType.Varint).bool(message.enabled);
        /* responses.Coordinate location = 3; */
        if (message.location)
            Coordinate.internalBinaryWrite(message.location, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* repeated responses.Coordinate pois = 4; */
        for (let i = 0; i < message.pois.length; i++)
            Coordinate.internalBinaryWrite(message.pois[i], writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* int32 width = 5; */
        if (message.width !== 0)
            writer.tag(5, WireType.Varint).int32(message.width);
        /* int32 height = 6; */
        if (message.height !== 0)
            writer.tag(6, WireType.Varint).int32(message.height);
        /* string name = 7; */
        if (message.name !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.name);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message responses.GPS
 */
export const GPS = new GPS$Type();
